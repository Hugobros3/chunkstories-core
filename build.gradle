// Apply the java plugin to add support for Java
buildscript {
	ext.kotlin_version = '1.6.10'

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id "com.diffplug.gradle.spotless" version "3.14.0"
	id "java"
	id "java-library"
	id "maven"
	id "org.jetbrains.kotlin.jvm" version "1.6.10"
}

repositories {
	mavenLocal()
	mavenCentral()
}

description = 'The base content chunkstories is built on.'
group = 'xyz.chunkstories'
version = '2.0.4'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

spotless {
	java {
		licenseHeaderFile 'codequality/header-include-notice.txt'
		eclipse().configFile 'codequality/style.xml'
	}

	kotlin {
		indentWithTabs()
		licenseHeaderFile 'codequality/header-include-notice.txt'
	}
}

ext {
	apiRevisionBuiltAgainst = '2.0.4'
}

dependencies {
	compile group: 'xyz.chunkstories', name: 'api', version: apiRevisionBuiltAgainst

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

task buildContentPack(type: Zip) {
	//Require Gradle to build the content jar first
	dependsOn jar
	
	//Include all resources, but don't bundle any project file from content authoring tools
	//Keeping those in the repo is fine, but users don't need it!
	from('res/'){
		exclude("**/*.pdn")
		exclude("**/*.ps")
		exclude("**/*.xcf")
		exclude("**/*.aup")
		exclude("**/*.blend")
	}
	
	//We want the final archive to bear our mod name
	archiveName = "core_content.zip";
	//archiveName = "${rootProject.name}.zip"
}

jar {
	destinationDir = file("$rootDir/res")
	version = null
}

clean {
	delete configurations.runtime.allArtifacts.files
}

artifacts {
	archives jar
	archives buildContentPack
}
